{"version":3,"sources":["api/tmdb.ts","lib/reducerUtils.ts","modules/trend/actions.ts","lib/createAsyncThunk.ts","modules/tmdb/actions.ts","modules/detail/actions.ts","modules/video/actions.ts","modules/tmdb/index.ts","modules/trend/index.ts","modules/detail/index.ts","modules/trend/reducer.ts","modules/trend/thunk.ts","modules/tmdb/reducer.ts","modules/tmdb/thunk.ts","modules/detail/reducer.ts","modules/detail/thunk.ts","modules/video/reducer.ts","modules/video/thunk.ts","modules/video/index.ts","components/Header.tsx","containers/HeaderContainer.tsx","api/genres.ts","components/MainVisual.tsx","containers/MainVisualContainer.tsx","components/List.tsx","containers/ListHeaderContainer.tsx","containers/ListContainer.tsx","containers/MovieWeb.tsx","components/DetailView/Gallery.tsx","components/DetailView/Credits.tsx","components/DetailView/Clips.tsx","components/DetailView/List.tsx","components/DetailView/DetailView.tsx","containers/DetailContainer.tsx","App.tsx","serviceWorker.ts","modules/index.ts","index.tsx"],"names":["API_KEY","TMDB_URL","POSTER_URL_342","POSTER_URL_500","POSTER_URL_ORIGINAL","getMovie","param","search","a","axios","get","response","data","getTrendMedia","mediaType","getVideo","id","getDetail","getCredit","getImage","getSimilar","asyncState","initial","initialData","loading","error","load","success","GET_TREND_LIST","GET_TREND_LIST_SUCCESS","GET_TREND_LIST_ERROR","getTrendListAsync","createAsyncAction","createAsyncThunk","asyncActionCreator","promiseCreator","params","dispatch","request","failure","undefined","result","GET_MOVIE_LIST","GET_MOVIE_LIST_SUCCESS","GET_MOVIE_LIST_ERROR","getMovieListAsync","GET_DETAIL","GET_DETAIL_SUCCESS","GET_DETAIL_ERROR","getDetailAsync","GET_VIDEO","GET_VIDEO_SUCCESS","GET_VIDEO_ERROR","getVideoAsync","initialState","trendList","trend","createReducer","state","action","payload","getTrendListThunk","movieList","tmdb","getMovieListThunk","detail","getMovieThunk","video","Header","menuList","initialParam","useState","menu","setMenu","toggleMenu","e","currentTarget","dataset","updated","map","list","isOn","useEffect","className","key","data-id","onClick","label","HeaderContainer","useDispatch","movieGenres","name","tvGenres","setBackground","setTimeout","document","querySelectorAll","setAttribute","getAttribute","MainVisualList","React","memo","media","renderGenre","title","poster_path","original_title","vote_average","vote_count","genre_ids","overview","media_type","backdrop_path","original_name","renderTitle","useCallback","Error","renderOriTitle","data-backdrop","to","src","alt","genre_id","Video","link","setLink","renderVideo","arr","results","filter","type","console","href","target","rel","MainVisual","Swiper","observer","observeParents","loop","spaceBetween","centeredSlides","effect","coverflowEffect","rotate","slideShadows","slideToClickedSlide","on","init","slideChange","genreId","genre","getGenre","g","length","MainVisualContainer","useSelector","MovieList","movie","List","ListHeaderContainer","Input","query","setQuery","onSubmit","preventDefault","placeholder","value","onChange","ListContainer","MovieWeb","Image","zoom","original","ref","image","attach","data-zoom-src","Gallery","images","setImage","gallery","slidesPerView","freeMode","update","mediumZoom","background","margin","backdrops","i","file_path","Credits","casts","setCasts","crews","setCrews","count","setCount","then","cast","splice","crew","credit_id","job","profile_path","character","Clips","clips","setClips","site","c","setData","log","DetailView","tagline","release_date","homepage","genres","runtime","spoken_languages","split","l","DetailContainer","movie_id","match","App","path","exact","component","Detail","Boolean","window","location","hostname","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","Thunk","logger","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa91c680.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const API_KEY = 'dc11dbd0605b4d60cc66ce5e8363e063';\nexport const TMDB_URL = 'https://api.themoviedb.org/3';\nexport const POSTER_URL_342 = 'https://image.tmdb.org/t/p/w342';\nexport const POSTER_URL_500 = 'https://image.tmdb.org/t/p/w500';\nexport const POSTER_URL_780 = 'https://image.tmdb.org/t/p/w780';\nexport const POSTER_URL_ORIGINAL = 'https://image.tmdb.org/t/p/original';\n\nexport async function getMovie(param: string, search?: boolean) {\n  const response = await axios.get<MovieList>(\n    `${TMDB_URL}${search ? '/search' : ''}/movie/${\n      search ? '?query=' : ''\n    }${param}${search ? '&' : '?'}api_key=${API_KEY}&language=ko-KR&page=1`\n  );\n  return response.data;\n}\n\nexport interface Movie {\n  poster_path: string | null;\n  adult: boolean;\n  overview: string;\n  release_date: string;\n  genre_ids: number[];\n  id: number;\n  original_title: string;\n  original_language: string;\n  title: string;\n  backdrop_path: string | null;\n  popularity: number;\n  vote_count: number;\n  video: boolean;\n  vote_average: number;\n  name: string;\n  original_name: string;\n}\n\nexport type MovieList = {\n  results: [];\n};\n\nexport async function getTrendMedia(mediaType: string) {\n  const response = await axios.get<MovieList>(\n    `${TMDB_URL}/trending/${mediaType}/week?api_key=${API_KEY}&language=ko-KR`\n  );\n  return response.data;\n}\n\nexport interface Media extends Movie {\n  media_type: string;\n}\n\nexport interface Video {\n  id: string;\n  iso_639_1: string;\n  iso_3166_1: string;\n  key: string;\n  name: string;\n  site: string;\n  size: number;\n  type: string;\n}\nexport interface VideoList {\n  id: number;\n  results: Video[];\n}\n\nexport async function getVideo(mediaType: string, id: number) {\n  const response = await axios.get<VideoList>(\n    `${TMDB_URL}/${mediaType}/${id}/videos?api_key=${API_KEY}&language=ko-KR`\n  );\n  return response.data;\n}\n\nexport interface Detail {\n  adult: boolean;\n  backdrop_path: string;\n  belongs_to_collection: null;\n  budget: number;\n  genres: Genre[];\n  homepage: string;\n  id: number;\n  imdb_id: string;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  production_companies: ProductionCompany[];\n  production_countries: ProductionCountry[];\n  release_date: string;\n  revenue: number;\n  runtime: number;\n  spoken_languages: SpokenLanguage[];\n  status: string;\n  tagline: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n}\n\nexport interface Genre {\n  id: number;\n  name: string;\n}\n\nexport interface ProductionCompany {\n  id: number;\n  logo_path: string;\n  name: string;\n  origin_country: string;\n}\n\nexport interface ProductionCountry {\n  iso_3166_1: string;\n  name: string;\n}\n\nexport interface SpokenLanguage {\n  iso_639_1: string;\n  name: string;\n}\n\nexport async function getDetail(id: string) {\n  const response = await axios.get<Detail>(\n    `${TMDB_URL}/movie/${id}?api_key=${API_KEY}&language=ko-KR`\n  );\n  return response.data;\n}\n\nexport interface Cast {\n  cast_id: number;\n  character: string;\n  credit_id: string;\n  gender: number;\n  name: string;\n  order: number;\n  profile_path: string;\n  id: number;\n}\nexport interface Crew {\n  credit_id: string;\n  department: string;\n  gender: number;\n  id: number;\n  job: string;\n  name: string;\n  profile_path: string | null;\n}\nexport interface Credit {\n  id: number;\n  cast: Cast[];\n  crew: Crew[];\n}\nexport const getCredit = async (id: string | number) => {\n  const response = await axios.get<Credit>(\n    `${TMDB_URL}/movie/${id}/credits?api_key=${API_KEY}&language=ko-KR`\n  );\n  return response.data;\n};\n\nexport const getImage = async (id: string | number) => {\n  const response = await axios.get<Images>(\n    `${TMDB_URL}/movie/${id}/images?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport interface Images {\n  id: number;\n  backdrops: Backdrop[];\n  posters: Backdrop[];\n}\n\nexport interface Backdrop {\n  aspect_ratio: number;\n  file_path: string;\n  height: number;\n  iso_639_1: null | string;\n  vote_average: number;\n  vote_count: number;\n  width: number;\n}\n\nexport const getSimilar = async (id: string | number) => {\n  const response = await axios.get<MovieList>(\n    `${TMDB_URL}/movie/${id}/similar?api_key=${API_KEY}&language=ko-KR`\n  );\n  return response.data;\n};\n","export type AsyncState<T, E = any> = {\n  data: T | null;\n  loading: boolean;\n  error: E | null;\n};\n\nexport const asyncState = {\n  initial: <T, E = any>(initialData?: T): AsyncState<T, E> => ({\n    data: initialData || null,\n    loading: false,\n    error: null\n  }),\n  load: <T, E = any>(data?: T): AsyncState<T, E> => ({\n    data: data || null,\n    loading: true,\n    error: null\n  }),\n  success: <T, E = any>(data: T): AsyncState<T, E> => ({\n    data,\n    loading: false,\n    error: null\n  }),\n  error: <T, E = any>(error: E): AsyncState<T, E> => ({\n    data: null,\n    loading: false,\n    error: error\n  })\n};\n","import { createAsyncAction } from 'typesafe-actions';\nimport { MovieList } from '../../api/tmdb';\nimport { AxiosError } from 'axios';\n\n// 액션타입\nexport const GET_TREND_LIST = 'trend/GET_TREND_LIST';\nexport const GET_TREND_LIST_SUCCESS = 'trend/GET_TREND_LIST_SUCCESS';\nexport const GET_TREND_LIST_ERROR = 'trend/GET_TREND_LIST_ERROR';\n\n// 액션 생성함수\nexport const getTrendListAsync = createAsyncAction(\n  GET_TREND_LIST,\n  GET_TREND_LIST_SUCCESS,\n  GET_TREND_LIST_ERROR\n)<undefined, MovieList, AxiosError>();\n","import { Dispatch } from 'redux';\nimport { AsyncActionCreator } from 'typesafe-actions';\n\ntype AnyAsyncActionCreator = AsyncActionCreator<any, any, any>;\n\nexport default function createAsyncThunk<\n  A extends AnyAsyncActionCreator,\n  F extends (...params: any[]) => Promise<any>>(\n  asyncActionCreator: A,\n  promiseCreator: F\n  ) {\n  type Params = Parameters<F>;\n  return function thunk(...params: Params) {\n    return async (dispatch: Dispatch) => {\n      const { request, success, failure } = asyncActionCreator;\n      dispatch(request(undefined));\n      try {\n        const result = await promiseCreator(...params);\n        dispatch(success(result));\n      } catch (e) {\n        dispatch(failure(e));\n      }\n    };\n  };\n}\n","import { createAsyncAction } from 'typesafe-actions';\nimport { MovieList } from '../../api/tmdb';\nimport { AxiosError } from 'axios';\n\n// 액션타입\nexport const GET_MOVIE_LIST = 'tmdb/GET_MOVIE_LIST';\nexport const GET_MOVIE_LIST_SUCCESS = 'tmdb/GET_MOVIE_LIST_SUCCESS';\nexport const GET_MOVIE_LIST_ERROR = 'tmdb/GET_MOVIE_LIST_ERROR';\n\n// 액션생성함수\nexport const getMovieListAsync = createAsyncAction(\n  GET_MOVIE_LIST,\n  GET_MOVIE_LIST_SUCCESS,\n  GET_MOVIE_LIST_ERROR\n)<undefined, MovieList, AxiosError>();\n","import { createAsyncAction } from 'typesafe-actions';\nimport { Detail } from '../../api/tmdb';\nimport { AxiosError } from 'axios';\n\n// 액션타입\nexport const GET_DETAIL = 'detail/GET_DETAIL';\nexport const GET_DETAIL_SUCCESS = 'detail/GET_DETAIL_SUCCESS';\nexport const GET_DETAIL_ERROR = 'detailtrend/GET_DETAIL_ERROR';\n\n// 액션 생성함수\nexport const getDetailAsync = createAsyncAction(\n  GET_DETAIL,\n  GET_DETAIL_SUCCESS,\n  GET_DETAIL_ERROR\n)<undefined, Detail, AxiosError>();\n","import { createAsyncAction } from 'typesafe-actions';\nimport { Video } from '../../api/tmdb';\nimport { AxiosError } from 'axios';\n\n// 액션타입\nexport const GET_VIDEO = 'trend/GET_VIDEO';\nexport const GET_VIDEO_SUCCESS = 'trend/GET_VIDEO_SUCCESS';\nexport const GET_VIDEO_ERROR = 'trend/GET_VIDEO_LIST_ERROR';\n\n// 액션 생성함수\nexport const getVideoAsync = createAsyncAction(\n  GET_VIDEO,\n  GET_VIDEO_SUCCESS,\n  GET_VIDEO_ERROR\n)<undefined, Video, AxiosError>();\n","export { default } from './reducer';\nexport * from './actions';\nexport * from './thunk';\nexport * from './types';","export { default } from './reducer';\nexport * from './actions';\nexport * from './thunk';\nexport * from './types';","export { default } from './reducer';\nexport * from './actions';\nexport * from './thunk';\nexport * from './types';","import { createReducer } from 'typesafe-actions';\nimport { TrendListState, TrendListAction } from './types';\nimport { asyncState } from '../../lib/reducerUtils';\nimport {\n  GET_TREND_LIST,\n  GET_TREND_LIST_SUCCESS,\n  GET_TREND_LIST_ERROR\n} from './actions';\n\nconst initialState: TrendListState = {\n  trendList: asyncState.initial()\n};\n\nconst trend = createReducer<TrendListState, TrendListAction>(initialState, {\n  [GET_TREND_LIST]: state => ({\n    ...state,\n    trendList: asyncState.load()\n  }),\n  [GET_TREND_LIST_SUCCESS]: (state, action) => ({\n    ...state,\n    trendList: asyncState.success(action.payload)\n  }),\n  [GET_TREND_LIST_ERROR]: (state, action) => ({\n    ...state,\n    trendList: asyncState.error(action.payload)\n  })\n});\n\nexport default trend;\n","import { getTrendMedia } from '../../api/tmdb';\nimport { getTrendListAsync } from './actions';\nimport createAsyncThunk from '../../lib/createAsyncThunk';\n\nexport const getTrendListThunk = createAsyncThunk(\n  getTrendListAsync,\n  getTrendMedia\n);\n","import { createReducer } from 'typesafe-actions';\nimport { MovieListState, MovieListAction } from './types';\nimport { asyncState } from '../../lib/reducerUtils';\nimport {\n  GET_MOVIE_LIST,\n  GET_MOVIE_LIST_SUCCESS,\n  GET_MOVIE_LIST_ERROR\n} from './actions';\n\nconst initialState: MovieListState = {\n  movieList: asyncState.initial()\n};\n\nconst tmdb = createReducer<MovieListState, MovieListAction>(initialState, {\n  [GET_MOVIE_LIST]: state => ({\n    ...state,\n    movieList: asyncState.load()\n  }),\n  [GET_MOVIE_LIST_SUCCESS]: (state, action) => ({\n    ...state,\n    movieList: asyncState.success(action.payload)\n  }),\n  [GET_MOVIE_LIST_ERROR]: (state, action) => ({\n    ...state,\n    movieList: asyncState.error(action.payload)\n  })\n});\n\nexport default tmdb;\n","import { getMovie } from '../../api/tmdb';\nimport { getMovieListAsync } from './actions';\nimport createAsyncThunk from '../../lib/createAsyncThunk';\n\nexport const getMovieListThunk = createAsyncThunk(\n  getMovieListAsync,\n  getMovie\n);\n","import { createReducer } from 'typesafe-actions';\nimport { DetailState, DetailAction } from './types';\nimport { asyncState } from '../../lib/reducerUtils';\nimport {\n  GET_DETAIL,\n  GET_DETAIL_SUCCESS,\n  GET_DETAIL_ERROR\n} from './actions';\n\nconst initialState: DetailState = {\n  detail: asyncState.initial()\n};\n\nconst detail = createReducer<DetailState, DetailAction>(initialState, {\n  [GET_DETAIL]: state => ({\n    ...state,\n    detail: asyncState.load()\n  }),\n  [GET_DETAIL_SUCCESS]: (state, action) => ({\n    ...state,\n    detail: asyncState.success(action.payload)\n  }),\n  [GET_DETAIL_ERROR]: (state, action) => ({\n    ...state,\n    detail: asyncState.error(action.payload)\n  })\n});\n\nexport default detail;\n","import { getDetail } from '../../api/tmdb';\nimport { getDetailAsync } from './actions';\nimport createAsyncThunk from '../../lib/createAsyncThunk';\n\nexport const getMovieThunk = createAsyncThunk(\n  getDetailAsync,\n  getDetail\n);\n","import { createReducer } from 'typesafe-actions';\nimport { VideoState, VideoAction } from './types';\nimport { asyncState } from '../../lib/reducerUtils';\nimport { GET_VIDEO, GET_VIDEO_SUCCESS, GET_VIDEO_ERROR } from './actions';\n\nconst initialState: VideoState = {\n  video: asyncState.initial()\n};\n\nconst video = createReducer<VideoState, VideoAction>(initialState, {\n  [GET_VIDEO]: state => ({\n    ...state,\n    trendList: asyncState.load()\n  }),\n  [GET_VIDEO_SUCCESS]: (state, action) => ({\n    ...state,\n    trendList: asyncState.success(action.payload)\n  }),\n  [GET_VIDEO_ERROR]: (state, action) => ({\n    ...state,\n    trendList: asyncState.error(action.payload)\n  })\n});\n\nexport default video;\n","import { getVideo } from '../../api/tmdb';\nimport { getVideoAsync } from './actions';\nimport createAsyncThunk from '../../lib/createAsyncThunk';\n\nexport const getVideoThunk = createAsyncThunk(getVideoAsync, getVideo);\n","export { default } from './reducer';\nexport * from './actions';\nexport * from './thunk';\nexport * from './types';","import React, { useState, useEffect } from 'react';\nimport { MenuList } from '../containers/HeaderContainer';\n\ntype HeaderProps = {\n  menuList: MenuList[];\n  load: any;\n  initialParam: string;\n};\n\nfunction Header({ menuList, load, initialParam }: HeaderProps) {\n  const [menu, setMenu] = useState(menuList);\n  const toggleMenu = (e: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    const id = e.currentTarget.dataset.id;\n    const updated: MenuList[] = menu.map(list => {\n      if (list.id === id) {\n        return {\n          ...list,\n          isOn: true\n        };\n      } else {\n        return {\n          ...list,\n          isOn: false\n        };\n      }\n    });\n    setMenu(updated);\n    load(id);\n  };\n\n  useEffect(() => {\n    load(initialParam);\n  }, [load, initialParam]);\n\n  return (\n    <div className=\"nav_wrap\">\n      <nav className=\"clearfix\">\n        <ul>\n          {menu &&\n            menu.map(list => (\n              <li\n                key={list.id}\n                data-id={list.id}\n                className={list.isOn ? 'on' : undefined}\n                onClick={toggleMenu}\n              >\n                {list.label}\n              </li>\n            ))}\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Header from '../components/Header';\nimport { getTrendListThunk } from '../modules/trend';\n\nexport type MenuList = {\n  id: string;\n  label: string;\n  isOn: boolean;\n};\n\nconst menuList: MenuList[] = [\n  {\n    id: 'movie',\n    label: '영화 트렌드',\n    isOn: true\n  },\n  {\n    id: 'tv',\n    label: 'TV 트렌드',\n    isOn: false\n  }\n];\n\nfunction HeaderContainer() {\n  const dispatch = useDispatch();\n  const loadTrendMediaList = (id: string) => {\n    dispatch(getTrendListThunk(id))\n  }\n  const initialParam = 'movie'\n\n  return (\n    <>\n      <h2 className=\"head_title\">이번 주 트렌드</h2>\n      <Header menuList={menuList} load={loadTrendMediaList} initialParam={initialParam} />\n    </>\n  );\n}\n\nexport default HeaderContainer;\n","export type Genre = {\n  id: number;\n  name: string;\n};\nconst movieGenres: Genre[] = [\n  {\n    id: 28,\n    name: '액션'\n  },\n  {\n    id: 12,\n    name: '어드벤처'\n  },\n  {\n    id: 16,\n    name: '애니메이션'\n  },\n  {\n    id: 35,\n    name: '코메디'\n  },\n  {\n    id: 80,\n    name: '범죄'\n  },\n  {\n    id: 99,\n    name: '다큐'\n  },\n  {\n    id: 18,\n    name: '드라마'\n  },\n  {\n    id: 10751,\n    name: '가족'\n  },\n  {\n    id: 14,\n    name: '판타지'\n  },\n  {\n    id: 36,\n    name: '역사'\n  },\n  {\n    id: 27,\n    name: '공포'\n  },\n  {\n    id: 10402,\n    name: '음악'\n  },\n  {\n    id: 9648,\n    name: '미스터리'\n  },\n  {\n    id: 10749,\n    name: '로맨스'\n  },\n  {\n    id: 878,\n    name: 'SF'\n  },\n  {\n    id: 10770,\n    name: 'TV'\n  },\n  {\n    id: 53,\n    name: '스릴러'\n  },\n  {\n    id: 10752,\n    name: '전쟁'\n  },\n  {\n    id: 37,\n    name: '웨스턴'\n  }\n];\nconst tvGenres: Genre[] = [\n  {\n    id: 10759,\n    name: '액션 & 어드벤처'\n  },\n  {\n    id: 16,\n    name: '애니메이션'\n  },\n  {\n    id: 35,\n    name: '코메디'\n  },\n  {\n    id: 80,\n    name: '범죄'\n  },\n  {\n    id: 99,\n    name: '다큐'\n  },\n  {\n    id: 18,\n    name: '드라마'\n  },\n  {\n    id: 10751,\n    name: '가족'\n  },\n  {\n    id: 10762,\n    name: '어린이'\n  },\n  {\n    id: 9648,\n    name: '미스터리'\n  },\n  {\n    id: 10763,\n    name: '뉴스'\n  },\n  {\n    id: 10764,\n    name: '리얼리티'\n  },\n  {\n    id: 10765,\n    name: 'SF & 판타지'\n  },\n  {\n    id: 10766,\n    name: '소프'\n  },\n  {\n    id: 10767,\n    name: '토크'\n  },\n  {\n    id: 10768,\n    name: '전쟁 & 정치'\n  },\n  {\n    id: 37,\n    name: '웨스턴'\n  }\n];\n\nexport function getGenre(mediaType: string): Genre[] {\n  switch (mediaType) {\n    case 'tv':\n      return tvGenres;\n    case 'movie':\n      return movieGenres;\n    default:\n      throw new Error(`Unhandled media type \"${mediaType}\"`);\n  }\n}\n","import React, { useEffect, useCallback, useState } from 'react';\nimport {\n  Media,\n  POSTER_URL_500,\n  POSTER_URL_ORIGINAL,\n  getVideo\n} from '../api/tmdb';\nimport { getGenre } from '../api/genres';\nimport Swiper from 'swiper';\nimport { Link } from 'react-router-dom';\n\n/**\n *  메인비주얼 컴포넌트\n */\n\nconst setBackground = () => {\n  setTimeout(() => {\n    document\n      .querySelectorAll('.bg')[0]\n      .setAttribute(\n        'style',\n        `background-image: url(${POSTER_URL_ORIGINAL}${document\n          .querySelectorAll('.swiper-slide-active')[0]\n          .getAttribute('data-backdrop')});`\n      );\n  }, 100);\n};\n\nfunction MainVisual({ data }: { data: Media[] }) {\n  useEffect(() => {\n    new Swiper('.main_visual_slider', {\n      observer: true,\n      observeParents: true,\n      loop: true,\n      spaceBetween: 100,\n      centeredSlides: true,\n      effect: 'coverflow',\n      coverflowEffect: {\n        rotate: 45,\n        slideShadows: false\n      },\n      slideToClickedSlide: true,\n      on: {\n        init: () => {\n          setBackground();\n        },\n        slideChange: () => {\n          setBackground();\n        }\n      },\n    });\n  }, []);\n\n  const renderGenre = useCallback(\n    (genreId: number) => {\n      const genres = getGenre(data[0].media_type);\n      const genre = genres.filter(g => g.id === genreId);\n      if (genre.length > 0) {\n        return (\n          <div className=\"genre\" key={genre[0].id}>\n            <p>{genre[0].name}</p>\n          </div>\n        );\n      }\n      return null;\n    },\n    [data]\n  );\n  return (\n    <div className=\"main_visual\">\n      <div className=\"bg\"></div>\n      <div className=\"main_visual_inner\">\n        <div className=\"swiper-container main_visual_slider\">\n          <div className=\"swiper-wrapper\">\n            {data.map((media: Media) => (\n              <MainVisualList\n                key={media.id}\n                media={media}\n                renderGenre={renderGenre}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n *  메인비주얼 리스트 컴포넌트\n */\ntype MainVisualListProps = {\n  media: Media;\n  renderGenre: any;\n};\n\nconst MainVisualList = React.memo(\n  ({ media, renderGenre }: MainVisualListProps) => {\n    const {\n      id,\n      title,\n      poster_path,\n      original_title,\n      vote_average,\n      vote_count,\n      genre_ids,\n      overview,\n      media_type,\n      backdrop_path,\n      name,\n      original_name\n    } = media;\n\n    const renderTitle = useCallback(() => {\n      switch (media_type) {\n        case 'movie':\n          return title;\n        case 'tv':\n          return name;\n        default:\n          throw new Error(\n            `[title error] -> Unhandled media type \"${media_type}\"`\n          );\n      }\n    }, [media_type, name, title]);\n    const renderOriTitle = useCallback(() => {\n      switch (media_type) {\n        case 'movie':\n          return original_title;\n        case 'tv':\n          return original_name;\n        default:\n          throw new Error(\n            `[original_title error] -> Unhandled media type \"${media_type}\"`\n          );\n      }\n    }, [media_type, original_name, original_title]);\n\n    return (\n      <div\n        className=\"swiper-slide media_list\"\n        data-id={id}\n        data-backdrop={backdrop_path}\n      >\n        <div className=\"media_poster\">\n          {media_type === 'movie' ? (\n            <Link to={`/detail/${id}`}>\n              <img src={`${POSTER_URL_500}/${poster_path}`} alt={title} />\n            </Link>\n          ) : (\n            <img src={`${POSTER_URL_500}/${poster_path}`} alt={title} />\n          )}\n        </div>\n        <div className=\"media_info\">\n          <div className=\"media_title\">\n            <h3>{renderTitle()}</h3>\n            <h4>{renderOriTitle()}</h4>\n          </div>\n          <div className=\"media_score\">\n            <i className=\"fas fa-star\"></i>\n            <span className=\"vote_average\">{vote_average * 10}%</span>\n            <span className=\"vote_count\">({vote_count})</span>\n          </div>\n          <div className=\"media_genre\">\n            {genre_ids.map((genre_id: number) => renderGenre(genre_id))}\n          </div>\n          <div className=\"media_overview\">\n            <p>{overview}</p>\n          </div>\n          <Video mediaType={media_type} id={id} />\n        </div>\n      </div>\n    );\n  }\n);\n\nexport function Video({ mediaType, id }: { mediaType: string; id: number }) {\n  const [link, setLink] = useState('');\n  const renderVideo = useCallback(async () => {\n    const data = await getVideo(mediaType, id);\n    try {\n      const arr = data.results.filter(list => list.type === 'Trailer');\n      if (arr[0]) {\n        return setLink(arr[0].key);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [mediaType, id]);\n\n  useEffect(() => {\n    renderVideo();\n  }, [renderVideo]);\n\n  if (link) {\n    return (\n      <div className=\"media_trailer\">\n        <a\n          href={`https://www.youtube.com/watch?v=${link}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className=\"fab fa-youtube\"></i> 예고편\n        </a>\n      </div>\n    );\n  }\n  return null;\n}\n\nexport default MainVisual;\n","import React from 'react';\nimport MainVisual from '../components/MainVisual';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../modules'\nimport '../css/MainVisual.css';\n\nfunction MainVisualContainer() {\n  const { data, loading, error } = useSelector((state: RootState) => state.trend.trendList);\n\n  if (loading) return <p className=\"message\">로딩중</p>;\n  if (error) return <p className=\"message\">에러발생</p>;\n  if (data) return <MainVisual data={data.results} />;\n  return null;\n}\n\nexport default MainVisualContainer;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../modules';\nimport { Movie, POSTER_URL_342 } from '../api/tmdb';\nimport { Link } from 'react-router-dom';\n\nfunction List() {\n  const { data, loading, error } = useSelector(\n    (state: RootState) => state.tmdb.movieList\n  );\n  if (loading) return <div className=\"message\">로딩중</div>;\n  if (error) return <div className=\"message\">에러발생</div>;\n  if (data) {\n    if (data.results.length > 0) {\n      return (\n        <>\n          {data.results.map((movie: Movie) => (\n            <MovieList key={movie.id} movie={movie} />\n          ))}\n        </>\n      );\n    } else return <div className=\"message\">검색 결과가 없습니다.</div>;\n  }\n  return null;\n}\n\nconst MovieList = React.memo(({ movie }: { movie: Movie }) => {\n  const {\n    poster_path,\n    title,\n    original_title,\n    vote_average,\n    vote_count,\n    id\n  } = movie;\n  return (\n    <div className=\"movie\">\n      <div className=\"movie_poster\">\n        <Link to={`/detail/${id}`}>\n          <picture>\n            <img src={`${POSTER_URL_342}${poster_path}`} alt={title} />\n          </picture>\n        </Link>\n      </div>\n      <div className=\"movie_info\">\n        <div className=\"movie_title\">\n          <h3>{title}</h3>\n          <h4>{original_title}</h4>\n        </div>\n        <div className=\"movie_score\">\n          <i className=\"fas fa-star\"></i>\n          <span className=\"vote_average\">{vote_average * 10}%</span>\n          <span className=\"vote_count\">({vote_count})</span>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default List;\n","import React from 'react';\nimport Header from '../components/Header';\nimport { useDispatch } from 'react-redux';\nimport { getMovieListThunk } from '../modules/tmdb';\n\nexport type MenuList = {\n  id: string;\n  label: string;\n  isOn: boolean;\n};\n\nconst menuList: MenuList[] = [\n  {\n    id: 'now_playing',\n    label: '현재 상영중',\n    isOn: true\n  },\n  {\n    id: 'popular',\n    label: '인기순',\n    isOn: false\n  },\n  {\n    id: 'top_rated',\n    label: '평점순',\n    isOn: false\n  },\n  {\n    id: 'upcoming',\n    label: '개봉예정',\n    isOn: false\n  }\n];\n\nfunction ListHeaderContainer() {\n  const dispatch = useDispatch();\n  const loadMovieList = (param: string) => {\n    dispatch(getMovieListThunk(param));\n  };\n  const initialParam = 'now_playing';\n  return (\n    <Header\n      menuList={menuList}\n      load={loadMovieList}\n      initialParam={initialParam}\n    />\n  );\n}\n\nexport default ListHeaderContainer;\n","import React, { useState } from 'react';\nimport List from '../components/List';\nimport '../css/List.css';\nimport ListHeaderContainer from './ListHeaderContainer';\nimport { useDispatch } from 'react-redux';\nimport { getMovieListThunk } from '../modules/tmdb';\n\nfunction ListContainer() {\n  return (\n    <div className=\"list_inner\">\n      <div className=\"list_nav\">\n        <ListHeaderContainer />\n        <Input />\n      </div>\n      <div className=\"list_wrap\">\n        <List />\n      </div>\n    </div>\n  );\n}\n\nfunction Input() {\n  const dispatch = useDispatch();\n  const searchMovie = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch(getMovieListThunk(query, true));\n  };\n  const [query, setQuery] = useState('');\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n  };\n  return (\n    <div className=\"search_form\">\n      <form onSubmit={searchMovie}>\n        <input\n          type=\"text\"\n          placeholder=\"검색\"\n          value={query}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">\n          <i className=\"fas fa-search\"></i>\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default ListContainer;\n","import React from 'react';\nimport HeaderContainer from './HeaderContainer';\nimport '../css/MovieWeb.css';\nimport MainVisualContainer from './MainVisualContainer';\nimport ListContainer from './ListContainer';\n\nfunction MovieWeb() {\n  return (\n    <>\n      <header id=\"header\">\n        <div className=\"header_inner\">\n          <HeaderContainer />\n        </div>\n      </header>\n      <MainVisualContainer />\n      <section className=\"list_section\">\n        <ListContainer />\n      </section>\n    </>\n  );\n}\n\nexport default MovieWeb;\n","import React, { useState, useEffect } from 'react';\nimport Swiper from 'swiper';\nimport { POSTER_URL_342, POSTER_URL_ORIGINAL, getImage, Backdrop } from '../../api/tmdb';\nimport mediumZoom, { Zoom } from 'medium-zoom';\n\nfunction Gallery({ id, name }: { id: number; name: string }) {\n  const [images, setImage] = useState();\n  useEffect(() => {\n    (async () => {\n      const data = await getImage(id);\n      try {\n        setImage(data);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [id]);\n  useEffect(() => {\n    const gallery = new Swiper('.gallery_sl', {\n      observer: true,\n      observeParents: true,\n      spaceBetween: 50,\n      slidesPerView: 'auto',\n      freeMode: true,\n      on: {\n        slideChange: () => {\n          gallery.update();\n        }\n      }\n    });\n  }, []);\n\n  const zoom = mediumZoom({ background: 'rgba(0, 0, 0, .5)', margin: 40 });\n\n  return (\n    <div className=\"gallery\">\n      <div className=\"gallery_title\">\n        <h4>갤러리</h4>\n      </div>\n      <div className=\"gallery_sl swiper-container\">\n        <div className=\"swiper-wrapper\">\n          {images &&\n            images.backdrops.map((i: Backdrop) => (\n              <div className=\"swiper-slide\" key={i.file_path}>\n                <Image\n                  src={`${POSTER_URL_342}${i.file_path}`}\n                  original={`${POSTER_URL_ORIGINAL}${i.file_path}`}\n                  alt={name}\n                  zoom={zoom}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Image({ src, alt, zoom, original }: { src: string; alt: string; zoom: Zoom; original: string }) {\n  const attachZoom = (image: any) => {\n    zoom.attach(image)\n  }\n  return <img src={src} alt={alt} ref={attachZoom} data-zoom-src={original} />\n}\n\nexport default Gallery;\n","import React, { useState, useEffect } from 'react';\nimport {\n  POSTER_URL_342,\n  Cast,\n  Crew,\n  Credit,\n  getCredit,\n} from '../../api/tmdb';\n\nfunction Credits({ id }: { id: number }) {\n  const [casts, setCasts] = useState();\n  const [crews, setCrews] = useState();\n  const [count, setCount] = useState(5);\n\n  useEffect(() => {\n    getCredit(id).then((value: Credit) => {\n      setCasts(value.cast.splice(0, count));\n      setCrews(value.crew.splice(0, count));\n    });\n  }, [count, id]);\n\n  return (\n    <>\n      <div className=\"credit_wrap\">\n        <div className=\"credit\">\n          <div className=\"credit_title\">상세</div>\n          <div className=\"crews_wrap\">\n            {crews &&\n              crews.map((crew: Crew) => (\n                <div className=\"crew\" key={crew.credit_id}>\n                  <div className=\"crew_position\">\n                    <h5>{crew.job}</h5>\n                  </div>\n                  <div className=\"crew_name\">\n                    <p>{crew.name}</p>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n        <div className=\"credit\">\n          <div className=\"credit_title\">출연</div>\n          <div className=\"casts_wrap\">\n            {casts &&\n              casts.map((cast: Cast) => (\n                <div className=\"cast\" key={cast.credit_id}>\n                  <div className=\"cast_profile\">\n                    <picture>\n                      <img\n                        src={`${POSTER_URL_342}${cast.profile_path}`}\n                        alt={cast.name}\n                      />\n                    </picture>\n                  </div>\n                  <div className=\"cast_info\">\n                    <div className=\"cast_position\">\n                      <h5>{cast.name}</h5>\n                    </div>\n                    <div className=\"cast_name\">\n                      <p>{cast.character}</p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"btn_more\">\n        <button type=\"button\" onClick={() => setCount(count + 5)}>\n          <i className=\"fas fa-plus\"></i> 더 보기\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default Credits;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { getVideo, Video } from '../../api/tmdb';\nimport Swiper from 'swiper';\n\nfunction Clips({ mediaType, id }: { mediaType: string; id: number }) {\n  const [clips, setClips] = useState();\n  const renderVideo = useCallback(async () => {\n    const data = await getVideo(mediaType, id);\n    try {\n      const arr = data.results.filter(list => list.site === 'YouTube');\n      if (arr) {\n        return setClips(arr);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [mediaType, id]);\n\n  useEffect(() => {\n    renderVideo();\n  }, [renderVideo]);\n\n  useEffect(() => {\n    new Swiper('.clips_sl', {\n      observer: true,\n      observeParents: true,\n      slidesPerView: 3.2,\n      freeMode: true,\n      spaceBetween: 50\n    });\n  }, []);\n\n  return (\n    <div className=\"clips\">\n      <div className=\"clips_title\">\n        <h4>클립</h4>\n      </div>\n      <div className=\"clips_sl swiper-container\">\n        <div className=\"swiper-wrapper\">\n          {clips && clips.length > 0 ? (\n            clips.map((c: Video) => (\n              <div className=\"swiper-slide\" key={c.id}>\n                <a\n                  href={`https://www.youtube.com/watch?v=${c.key}`}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <i className=\"fas fa-play-circle\"></i>\n                  <img\n                    src={`https://img.youtube.com/vi/${c.key}/hqdefault.jpg`}\n                    alt={c.name}\n                  />\n                </a>\n                <p>{c.name}</p>\n              </div>\n            ))\n          ) : (\n            <p className=\"message\">클립이 없어요 ㅠ_ㅠ</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Clips;\n","import React, { useState, useEffect } from 'react';\nimport { Movie, POSTER_URL_342, getSimilar } from '../../api/tmdb';\nimport { Link } from 'react-router-dom';\n\nfunction List({ id }: { id: string | number }) {\n  const [data, setData] = useState();\n  const [count, setCount] = useState(3);\n  console.log(count);\n  useEffect(() => {\n    (async () => {\n      const data = await getSimilar(id);\n      try {\n        setData(data.results.splice(0, count));\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [id, count]);\n  if (data) {\n    if (data.length > 0) {\n      return (\n        <>\n          {data.map((movie: Movie) => (\n            <MovieList key={movie.id} movie={movie} />\n          ))}\n          {count <= 20 ? (\n            <div className=\"btn_more\">\n              <button onClick={() => setCount(count + 3)}>\n                <i className=\"fas fa-plus\"></i> 비슷한 영화 더보기\n              </button>\n            </div>\n          ) : null}\n        </>\n      );\n    } else return <div className=\"message\">비슷한 영화가 없어요 ㅠ_ㅠ</div>;\n  }\n  return null;\n}\n\nconst MovieList = React.memo(({ movie }: { movie: Movie }) => {\n  const {\n    poster_path,\n    title,\n    original_title,\n    vote_average,\n    vote_count,\n    id\n  } = movie;\n  return (\n    <div className=\"movie\">\n      <div className=\"movie_poster\">\n        <Link to={`/detail/${id}`}>\n          <picture>\n            <img src={`${POSTER_URL_342}${poster_path}`} alt={title} />\n          </picture>\n        </Link>\n      </div>\n      <div className=\"movie_info\">\n        <div className=\"movie_title\">\n          <h3>{title}</h3>\n          <h4>{original_title}</h4>\n        </div>\n        <div className=\"movie_score\">\n          <i className=\"fas fa-star\"></i>\n          <span className=\"vote_average\">{vote_average * 10}%</span>\n          <span className=\"vote_count\">({vote_count})</span>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default List;\n","import React from 'react';\nimport { Detail, POSTER_URL_ORIGINAL, POSTER_URL_342 } from '../../api/tmdb';\nimport { Video } from '../MainVisual';\nimport Gallery from './Gallery';\nimport Credits from './Credits';\nimport Clips from './Clips';\nimport List from './List';\n\nfunction DetailView({ data }: { data: Detail; getCredit: any }) {\n  const {\n    backdrop_path,\n    title,\n    original_title,\n    tagline,\n    release_date,\n    poster_path,\n    vote_average,\n    vote_count,\n    homepage,\n    genres,\n    id,\n    overview,\n    runtime,\n    spoken_languages\n  } = data;\n\n  return (\n    <div className=\"detail_wrap\">\n      <div className=\"visual\">\n        <picture>\n          <img\n            className=\"backdrop\"\n            src={`${POSTER_URL_ORIGINAL}${backdrop_path}`}\n            alt={title}\n          />\n        </picture>\n      </div>\n      <div className=\"detail_contents\">\n        <div className=\"detail_title\">\n          <h2>\n            {title} <span>({release_date.split('-')[0]})</span>\n          </h2>\n          <h3>{original_title}</h3>\n          <p>{tagline}</p>\n        </div>\n        <div className=\"detail_info\">\n          <div className=\"detail_poster\">\n            <div className=\"detail_poster_inner\">\n              <picture>\n                <img src={`${POSTER_URL_342}${poster_path}`} alt={title} />\n              </picture>\n            </div>\n            <Video mediaType={'movie'} id={id} />\n          </div>\n          <div className=\"detail_list_wrap\">\n            <div className=\"detail_info_top\">\n              <div className=\"detail_subtitle\">\n                <h2>{title}</h2>\n                <p>\n                  <i className=\"fas fa-star\"></i>{' '}\n                  <span>{vote_average * 10}%</span> <span>({vote_count})</span>\n                </p>\n                <p>\n                  <i className=\"fas fa-calendar-day\"></i>{' '}\n                  <span>{release_date}</span>\n                </p>\n                <p>\n                  <i className=\"fas fa-clock\"></i> <span>{runtime}분</span>\n                </p>\n                {spoken_languages.map(l => (\n                  <p key={l.name}>\n                    <i className=\"fas fa-language\"></i> <span>{l.name}</span>\n                  </p>\n                ))}\n              </div>\n              <div className=\"right\">\n                <p>\n                  <a href={homepage} rel=\"noopener noreferrer\" target=\"_blank\">\n                    <i className=\"fas fa-link\"></i> Homepage\n                  </a>\n                </p>\n                <div className=\"genre_wrap\">\n                  {genres.map(genre => (\n                    <div className=\"genre\" key={genre.id}>\n                      {genre.name}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n            <div className=\"detail_info_mid\">\n              <Credits id={id} />\n            </div>\n            <div className=\"story_line\">\n              <div className=\"story_title\">\n                <h4>줄거리</h4>\n                <div className=\"story_text\">\n                  <h5>{tagline}</h5>\n                  <p>{overview}</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"gallery_wrap\">\n          <Gallery id={id} name={title} />\n        </div>\n        <div className=\"clips_wrap\">\n          <Clips id={id} mediaType={'movie'} />\n        </div>\n        <div className=\"similar\">\n          <div className=\"similar_title\">\n            <h4>비슷한 영화</h4>\n          </div>\n          <div className=\"similar_wrap\">\n            <List id={id} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailView;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMovieThunk } from '../modules/detail';\nimport DetailView from '../components/DetailView';\nimport { RootState } from '../modules';\nimport '../css/Detail.css';\nimport { getCredit } from '../api/tmdb';\n\ninterface match {\n  params: {\n    movie_id: string;\n  };\n  isExact: boolean;\n  path: string;\n  url: string;\n}\n\nfunction DetailContainer({ match }: { match: match }) {\n  const { movie_id } = match.params;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getMovieThunk(movie_id));\n  }, [dispatch, movie_id]);\n  const { data, loading, error } = useSelector((state: RootState) => state.detail.detail);\n  if (loading) return <div className=\"message\">로딩중</div>\n  if (error) return <div className=\"message\">에러발생</div>\n  if (data) return <DetailView data={data} getCredit={getCredit} />;\n  return null\n}\n\nexport default DetailContainer;\n","import React from 'react';\nimport MovieWeb from './containers/MovieWeb';\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport Detail from './containers/DetailContainer';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" exact component={MovieWeb} />\n      <Route path=\"/detail/:movie_id\" component={Detail} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport tmdb from './tmdb';\nimport trend from './trend';\nimport video from './video';\nimport detail from './detail';\n\nconst rootReducer = combineReducers({\n  tmdb,\n  trend,\n  video,\n  detail\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport Thunk from 'redux-thunk';\nimport rootReducer from './modules';\nimport logger from 'redux-logger';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(Thunk, logger))\n);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}